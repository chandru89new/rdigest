name: Haskell CI

on:
  workflow_dispatch:
    inputs:
      ghc_version:
        description: "GHC version to install"
        required: true
        default: "9.4.8"
      cabal_version:
        description: "Cabal version to install"
        required: true
        default: "3.10.3.0"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GHCup
        run: |
          sudo apt-get update
          sudo apt-get install -y curl g++ libgmp-dev make # Ensure dependencies
          curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh -s -- -y

      - name: Add GHCup to PATH
        run: echo 'export PATH="$HOME/.ghcup/bin:$PATH"' >> $GITHUB_ENV

      - name: Install Latest GHC and Cabal
        run: |
          source ~/.ghcup/env
          ghcup install ghc ${{ inputs.ghc_version }}
          ghcup set ghc ${{ inputs.ghc_version }}
          ghcup install cabal ${{ inputs.cabal_version }}
          ghcup set cabal ${{ inputs.cabal_version }}

      - name: Update Cabal Dependencies
        run: |
          source ~/.ghcup/env
          cabal update
          cabal build --disable-profiling --enable-split-sections

      - name: Build Binary
        run: |
          source ~/.ghcup/env
          cabal install --overwrite-policy=always --disable-profiling --enable-split-sections --installdir=./release

      - name: Create Release
        if: false
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.1.0
          release_name: Release v0.1.0
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: false
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/<your-binary-name>
          asset_name: <your-binary-name>
          asset_content_type: application/octet-stream
